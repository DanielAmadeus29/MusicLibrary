@page
@model HomePageModel
@{
    ViewData["Title"] = "Home - Music Library";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="/css/homepagestyle.css" />
</head>
<body>
    <header class="navbar">
        <div class="navbar-container">
            <h1><strong>@Model.Username</strong>! Music Library</h1>
            <nav>
                <a href="/CreatePlaylist">Create Playlist</a>
                <a href="/AddSong">Add Song</a>
                <a href="/Index">Logout</a>
                <div class="player-container"></div>
            </nav>
        </div>
    </header>

    <main class="main-content">
        <section class="content">
            <h2>Welcome, <strong>@Model.Username</strong>!</h2>
            <p>Number of Songs: @Model.Songs.Count</p>

            <section class="playlists">
                <h2>Your Playlists</h2>
                @if (Model.Playlists.Any())
                {
                    <div class="playlist-actions">
                        <!-- Delete playlist form -->
                        <form method="post" asp-page-handler="DeletePlaylist" style="display:inline; margin-left:10px;">
                            <select asp-for="DeletePlaylistId" required>
                                @foreach (var playlist in Model.Playlists)
                                {
                                    <option value="@playlist.Id">@playlist.Name</option>
                                }
                            </select>
                            <button type="submit" class="delete-btn">Delete Playlist</button>
                        </form>
                    </div>
                }
                else
                {
                    <p>You don't have any playlists yet. Create one!</p>
                }
            </section>



            <div class="search-bar">
                <input type="text" id="searchInput" placeholder="Search songs/artist..." onkeyup="searchSongs()" />
            </div>

            <div class="songs-list" id="songsList">
                @foreach (var song in Model.Songs)
                {
                    <div class="song-item">
                        <div class="song-info">
                            <h3>@song.Title</h3>
                            <p>by @song.Artist</p>
                            <p>
                                Playlists:
                                @{
                                    var playlistsForSong = Model.Playlists
                                    .Where(p => p.Songs != null && p.Songs.Any(s => s.Id == song.Id))
                                    .ToList();

                                    if (!playlistsForSong.Any())
                                    {
                                        <span>Not in any playlist</span>
                                    }
                                    else
                                    {
                                        // Join all playlist names with a comma
                                        var playlistNames = string.Join(", ", playlistsForSong.Select(p => p.Name));
                                        <span>@playlistNames</span>
                                    }
                                }
                            </p>


                        </div>
                        <div class="song-actions">
                            <button onclick="playSong('@song.FilePath', '@song.Title', '@song.Artist')" class="play-btn">Play</button>

                            <form method="post" asp-page-handler="Delete" asp-route-songId="@song.Id" style="display:inline;">
                                <button type="submit" class="delete-btn">Delete</button>
                            </form>

                            <form method="post" asp-page-handler="AddToPlaylist" asp-route-songId="@song.Id" style="display:inline;">
                                <select name="PlaylistId" required>
                                    @foreach (var playlist in Model.Playlists)
                                    {
                                        <option value="@playlist.Id">@playlist.Name</option>
                                    }
                                </select>
                                <button type="submit" class="add-to-playlist-btn">Add to Playlist</button>
                            </form>
                        </div>
                    </div>
                }
            </div>
        </section>
    </main>

    <footer class="footer-nav">
        <div class="footer-container">
            <div class="footer-text">
                <h2>Now Playing</h2>
                <p><strong id="currentSongTitle">No song selected</strong></p>
                <p><strong id="currentSongArtist"></strong></p>
            </div>

            <div class="footer-audio">
                <audio id="audioPlayer" controls>
                    <source src="" type="audio/mpeg" />
                </audio>
            </div>
        </div>
    </footer>

    <script>
        function playSong(filePath, title, artist) {
            const audioPlayer = document.getElementById('audioPlayer');
            const currentSongTitle = document.getElementById('currentSongTitle');
            const currentSongArtist = document.getElementById('currentSongArtist');

            audioPlayer.src = filePath;
            currentSongTitle.textContent = title;
            currentSongArtist.textContent = artist ? `by ${artist}` : '';
            audioPlayer.play();
        }

        function searchSongs() {
            const input = document.getElementById('searchInput').value.toLowerCase();
            const songsList = document.getElementById('songsList');
            const songItems = songsList.getElementsByClassName('song-item');

            for (let i = 0; i < songItems.length; i++) {
                const songTitle = songItems[i].querySelector('.song-info h3').textContent.toLowerCase();
                const songArtist = songItems[i].querySelector('.song-info p').textContent.toLowerCase();
                const playlistText = songItems[i].querySelector('.song-info p span')
                    ? songItems[i].querySelector('.song-info p span').textContent.toLowerCase()
                    : ''; // Handle case when there are no playlists

                if (songTitle.includes(input) || songArtist.includes(input) || playlistText.includes(input)) {
                    songItems[i].style.display = '';
                } else {
                    songItems[i].style.display = 'none';
                }
            }
        }

    </script>
</body>
</html>
